@startuml
 -> Mote: sendToGateWay(data, macCommands)
 activate Mote
 create LoraWanPacket
 Mote -> LoraWanPacket: new()
 activate LoraWanPacket
 return packet

 Mote -> Mote: loraSend(packet)
 Mote -> Mote: update history
 Mote -> EnvironmentAPI: getGateways()
 activate EnvironmentAPI
 return gateways
 loop for all gateways
 create LoraTransmission
   Mote -> LoraTransmission: new()
   activate LoraTransmission
   return transmission
   Mote -> Mote : addToTransmissionsToSend
 end
 Mote -> EnvironmentAPI: getMotes()
 activate EnvironmentAPI
 return motes
 loop for all motes where mote != this
    Mote -> LoraTransmission: new()
    activate LoraTransmission
    return transmission
    Mote -> Mote : addToTransmissionsToSend
  end

  loop for all transmissionsToSend
  activate LoraTransmission
     Mote -> LoraTransmission: depart()
     loop until receiver reached
     activate LoraTransmission
     LoraTransmission -> LoraTransmission: moveTo(x,y)
     LoraTransmission -> EnvironmentAPI: getCharacteristic(x,y)
     activate EnvironmentAPI
     return characteristic
     LoraTransmission -> LoraTransmission: setTransmissionPower(...)
     end
     LoraTransmission -> NetworkEntity: receiveTransmission(this)
     activate NetworkEntity
     NetworkEntity -> NetworkEntity: IsPacketstrenghtHighEnough(transmission)
     NetworkEntity -> NetworkEntity: Collsion(transmission)
     NetworkEntity -> NetworkEntity: handleMacCommands(...)
     NetworkEntity -> NetworkEntity: onRecieve(...)
     NetworkEntity -> NetworkEntity: continue
    deactivate
     end


@enduml
